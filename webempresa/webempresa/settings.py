"""
Django settings for webempresa project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os # me marcaba error en el os de MEDIA_ROOT = os.path.join(BASE_DIR, 'media')por eso la importé

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'imr6=uizp9i+3xg*w*@$y0#*1^c6w6*4ii8diy$3d(&v#$47na'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'ckeditor', # activando el skeditor, es el editor de textos instalado usando pip install django-ckeditor 
    'contact', # activando la app  contact en django, ojo que si escribimos mal el nombre de la app marcará error OSError: [WinError 123] El nombre de archivo, el nombre de directorio o la sintaxis de la etiqueta del volumen no son correctos: '<frozen importlib._bootstrap>'
    'core',
    'pages.apps.PagesConfig', # activando app pages.
    'services.apps.ServicesConfig',
    'social.apps.SocialConfig',  # activamos la app social, haciendo referencia a la clase de class SocialConfig(AppConfig): y cargar la configuración extendida con el verbose name
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'webempresa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social.processors.ctx_dict', # procesador de contexto /social/processors.py y su función cxt_dict para usar las variables "text" y los links de redes sociales en todos los templates de la web
            ],
        },
    },
]

WSGI_APPLICATION = 'webempresa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'


# Media configuración

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # esto apuntará a la carpeta media.

# ckeditor configuración de barra de herramientas

# config Básica con 'Basic' y configuración desbloqueando todo con 'None'
CKEDITOR_CONFIGS = {  # diccionario creado 
    'default': { # creamos una clave llamada default con la configuración por defecto
        'toolbar': None, # que incluirá 1 nuevo diccionario con una nueva clave llamada toolbar o barra de herramientas que vamos a dejar en None o nula.  con None, nos mostraá absolutamente todos los campos o herramientas disponibles del ckeditor. o sea, no lanza ninguna config, es todo lo que se puede integrar en ckeditor,   usando unicamente "Basic" aparecerá en la barra de herramientas las nebritas y las cursivas y edición de texto en html directo.
    } 
}


'''
# configuración personalizada, con un editor  más ligero  con campos o herramientas interesante y podemos personalizar leyendo el código
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            #['RemoveFormat', 'Source']
        ]
    }
}
'''

# Configuración de email con Mailtrap
# así django Utilizará estas credenciales Para recibir y enviar correos Pero más que nada enviar que es lo que queremos hacer.
EMAIL_HOST = 'smtp.mailtrap.io'
EMAIL_HOST_USER = '7811036e0c5cc7'
EMAIL_HOST_PASSWORD = '0cbc57c5078dd2'
EMAIL_PORT = '2525'
